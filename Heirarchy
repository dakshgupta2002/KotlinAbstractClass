fun main() {
    
    abstract class Dwelling(private var residents:Int){
        abstract val material:String
        abstract val capacity:Int
        abstract val cost:Int 
        abstract fun area(): Double
        fun space(): Boolean{
            return residents<=capacity
        }
        
    }
    class squareRoom(residents:Int,val length: Double): Dwelling(residents){
        override val material="cement"
        override val capacity=2
        override val cost=1000
        override fun area():Double {
            return length*length
        }
    }
    class CircleRoom(residents:Int, val radius:Double ): Dwelling(residents){
        override val material="Glass"
        override val capacity=10
        override val cost=10000
        override fun area(): Double{
        	return 22*radius*radius/7 
    	}
    }
    
    
    val classone=squareRoom(6,4.5)
    print("SQUARE DWELLERS \n//////////////// \n")
    println("Material: ${squareRoom(6,4.5).material} \nCapacity:${classone.capacity} \ncost: ${classone.cost}")    
    println("Do we have space? ${classone.space()} \narea:${classone.area()}")
    
    val classtwo=CircleRoom(5,1.0)
    print("CIRCLE DWELLER \n//////////////// \n")
    println("Material: ${classtwo.material} \nCapacity: ${classtwo.capacity}")
    print("Do we have space? ${classtwo.space()}\n area:${classtwo.area()}")
    
}
